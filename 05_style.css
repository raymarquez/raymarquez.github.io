{
    box-sizing: border-box;
    font-family: Calibri, Helvetica, sans-serif;
    color: #777;
    
    
}


    
.navbar{
   background-color: darkblue;
  
}

.navbar-brand{
    background-color: lightblue;
    margin: 7%;
    padding-left: 50%;
    padding-right: 50%;
    text-align: center;
    font-family: Calibri;
	color: white;
	font-size: 25px;
}
.summary{
    color: blue;
    font-family: Calibri, 'Times New Roman', Times, serif;
}
.para{
    font-family: Calibri, Helvetica, sans-serif;
}
.footer{
    background-color: darkblue;
    border-bottom-color: blue;
	text-align: center;
}
p{
    font-size: 20px;
}
h1{
    font-size: 35px;
}
h2{
    font-size: 25px;
}
h5{
    font-size: 20px;
}
.latitude{
    font-weight: bold;
    color: white;
    font-family: Georgia, 'Times New Roman', Times, serif;
}
.dropdown-menu{
   background-color: lightblue;
   color: white;
}
.content{
	font-size: 20px;
	font-weight; bold
}

.vl {
  border-left: 6px solid green;
  height: 500px;
}

<script>
var margin = {top:10, right:30, bottom:30, left:40},
    width = 460 - margin.left - margin.right,
    height = 400 - margin.top - margin.bottom;

var svg = d3.select("#my_dataviz")
  .append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform",
          "translate(" + margin.left + "," + margin.top + ")");

//d3.csv ("http://datasets.flowingdata.com/hot-dog-contest-winners.csv", function(data) {
d3.csv("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/1_OneNum.csv", function(data) {
	
	var x = d3.scaleLinear()
	  .domain([0,1000]).          // d3.max(data, function(d) { return +d.price })
          .range([0, width]);
	
	svg.append("g")
	  .attr("transform", "translate(0," + height + ")")
	  .call(d3.axisBottom(x));
	
	var histogram = d3.histogram()
	  .value(function(d) {return d.price;})
	  .domain(x.domain())
	  .thresholds(x.ticks(70));
	
	var bins = histogram(data);
	
	var y = d3.scaleLinear()
	  .range([height, 0]);
	  y.domain([0, d3.max(bins, function(d) {return d.length; })]);
	
	svg.append("g")
	  .call(d3.axisLeft(y));
	
	svg.selectAll("rect")
	  .data(bins)
	  .enter()
	  .append("rect")
	    .attr("x",1)
	    .attr("transform",function(d) {return "translate(" + x(d.x0) + "," + y(d.length) + ")";})
	    .attr("width", function(d) {return x(d.x1) - x(d.x0) -1 ;})
	    .attr("height", function(d) {return height - y(d.length);})
	    .style("fill","#69b3a2")
	
});
</script>
	
